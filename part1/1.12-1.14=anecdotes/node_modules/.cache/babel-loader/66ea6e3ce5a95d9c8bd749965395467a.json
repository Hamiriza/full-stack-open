{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/hamirizafirdhanardyasta/Documents/Hamiriza's/fullstackopen/part1/1.6-1.11=unicafe/src/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nconst Statistic = ({\n  text,\n  value\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [text, \" \", value]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Statistic;\n\nconst Statistics = props => {\n  // console.log(\"props is\", props);\n  let keys = Object.keys(props);\n\n  if (keys.every(key => props[key] === 0)) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No feedback given\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this);\n  }\n\n  const {\n    good,\n    neutral,\n    bad\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Statistic, {\n      text: \"good\",\n      value: good\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Statistic, {\n      text: \"neutral\",\n      value: neutral\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Statistic, {\n      text: \"bad\",\n      value: bad\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Statistic, {\n      text: \"all\",\n      value: good + neutral + bad\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Statistic, {\n      text: \"average\",\n      value: (good - bad) / (good + neutral + bad)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Statistic, {\n      text: \"positive\",\n      value: good / (good + neutral + bad) * 100\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"good \", good]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"neutral \", neutral]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"bad \", bad]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"all \", good + neutral + bad]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"average \", (good - bad) / (good + neutral + bad)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"positive \", good / (good + neutral + bad) * 100, \"%\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = Statistics;\n\nconst App = () => {\n  _s();\n\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"give feedback\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setGood(good + 1),\n      children: \"good\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setNeutral(neutral + 1),\n      children: \"neutral\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setBad(bad + 1),\n      children: \"bad\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"statistics\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Statistics, {\n      good: good,\n      neutral: neutral,\n      bad: bad\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"eScCFcZxMV7EVTyq8/QmtvFilbs=\");\n\n_c3 = App;\nReactDOM.render( /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 64,\n  columnNumber: 17\n}, this), document.getElementById(\"root\"));\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Statistic\");\n$RefreshReg$(_c2, \"Statistics\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"sources":["/Users/hamirizafirdhanardyasta/Documents/Hamiriza's/fullstackopen/part1/1.6-1.11=unicafe/src/index.js"],"names":["React","useState","ReactDOM","Statistic","text","value","Statistics","props","keys","Object","every","key","good","neutral","bad","App","setGood","setNeutral","setBad","render","document","getElementById"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nconst Statistic = ({ text, value }) => {\n  return (\n    <div>\n      <p>\n        {text} {value}\n      </p>\n    </div>\n  );\n};\n\nconst Statistics = (props) => {\n  // console.log(\"props is\", props);\n  let keys = Object.keys(props);\n  if (keys.every((key) => props[key] === 0)) {\n    return (\n      <div>\n        <p>No feedback given</p>\n      </div>\n    );\n  }\n  const { good, neutral, bad } = props;\n  return (\n    <div>\n      <Statistic text=\"good\" value={good} />\n      <Statistic text=\"neutral\" value={neutral} />\n      <Statistic text=\"bad\" value={bad} />\n      <Statistic text=\"all\" value={good + neutral + bad} />\n      <Statistic text=\"average\" value={(good - bad) / (good + neutral + bad)} />\n      <Statistic\n        text=\"positive\"\n        value={(good / (good + neutral + bad)) * 100}\n      />\n\n      <p>good {good}</p>\n      <p>neutral {neutral}</p>\n      <p>bad {bad}</p>\n      <p>all {good + neutral + bad}</p>\n      <p>average {(good - bad) / (good + neutral + bad)}</p>\n      <p>positive {(good / (good + neutral + bad)) * 100}%</p>\n    </div>\n  );\n};\n\nconst App = () => {\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  return (\n    <div>\n      <h1>give feedback</h1>\n      <button onClick={() => setGood(good + 1)}>good</button>\n      <button onClick={() => setNeutral(neutral + 1)}>neutral</button>\n      <button onClick={() => setBad(bad + 1)}>bad</button>\n      <h1>statistics</h1>\n      <Statistics good={good} neutral={neutral} bad={bad} />\n    </div>\n  );\n};\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"]},"metadata":{},"sourceType":"module"}