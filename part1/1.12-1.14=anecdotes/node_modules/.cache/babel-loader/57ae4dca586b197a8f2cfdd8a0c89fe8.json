{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/hamirizafirdhanardyasta/Documents/Hamiriza's/fullstackopen/part1/1.6-1.11=unicafe/src/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nconst Button = props => {\n  const {\n    onClick,\n    text\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: onClick,\n    children: text\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 10\n  }, this);\n};\n\n_c = Button;\n\nconst Statistic = ({\n  text,\n  value\n}) => {\n  if (text === \"positive\") {\n    return /*#__PURE__*/_jsxDEV(\"td\", {\n      children: [text, \" \", value, \"%\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"td\", {\n    children: [text, \" \", value]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = Statistic;\n\nconst Statistics = props => {\n  // console.log(\"props is\", props);\n  let keys = Object.keys(props);\n\n  if (keys.every(key => props[key] === 0)) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No feedback given\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 12\n    }, this);\n  }\n\n  const {\n    good,\n    neutral,\n    bad\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n        children: /*#__PURE__*/_jsxDEV(Statistic, {\n          text: \"good\",\n          value: good\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: /*#__PURE__*/_jsxDEV(Statistic, {\n          text: \"neutral\",\n          value: neutral\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: /*#__PURE__*/_jsxDEV(Statistic, {\n          text: \"bad\",\n          value: bad\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: /*#__PURE__*/_jsxDEV(Statistic, {\n          text: \"all\",\n          value: good + neutral + bad\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: /*#__PURE__*/_jsxDEV(Statistic, {\n          text: \"average\",\n          value: (good - bad) / (good + neutral + bad)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: /*#__PURE__*/_jsxDEV(Statistic, {\n          text: \"positive\",\n          value: good / (good + neutral + bad) * 100\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n\n_c3 = Statistics;\n\nconst App = () => {\n  _s();\n\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"give feedback\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => setGood(good + 1),\n      text: \"good\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => setNeutral(good + 1),\n      text: \"neutral\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => setBad(good + 1),\n      text: \"bad\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"statistics\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Statistics, {\n      good: good,\n      neutral: neutral,\n      bad: bad\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"eScCFcZxMV7EVTyq8/QmtvFilbs=\");\n\n_c4 = App;\nReactDOM.render( /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 80,\n  columnNumber: 17\n}, this), document.getElementById(\"root\"));\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Button\");\n$RefreshReg$(_c2, \"Statistic\");\n$RefreshReg$(_c3, \"Statistics\");\n$RefreshReg$(_c4, \"App\");","map":{"version":3,"sources":["/Users/hamirizafirdhanardyasta/Documents/Hamiriza's/fullstackopen/part1/1.6-1.11=unicafe/src/index.js"],"names":["React","useState","ReactDOM","Button","props","onClick","text","Statistic","value","Statistics","keys","Object","every","key","good","neutral","bad","App","setGood","setNeutral","setBad","render","document","getElementById"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nconst Button = (props) => {\n  const { onClick, text } = props;\n  return <button onClick={onClick}>{text}</button>;\n};\n\nconst Statistic = ({ text, value }) => {\n  if (text === \"positive\") {\n    return (\n      <td>\n        {text} {value}%\n      </td>\n    );\n  }\n  return (\n    <td>\n      {text} {value}\n    </td>\n  );\n};\n\nconst Statistics = (props) => {\n  // console.log(\"props is\", props);\n  let keys = Object.keys(props);\n  if (keys.every((key) => props[key] === 0)) {\n    return <p>No feedback given</p>;\n  }\n  const { good, neutral, bad } = props;\n  return (\n    <table>\n      <tbody>\n        <tr>\n          <Statistic text=\"good\" value={good} />\n        </tr>\n        <tr>\n          <Statistic text=\"neutral\" value={neutral} />\n        </tr>\n        <tr>\n          <Statistic text=\"bad\" value={bad} />\n        </tr>\n        <tr>\n          <Statistic text=\"all\" value={good + neutral + bad} />\n        </tr>\n        <tr>\n          <Statistic\n            text=\"average\"\n            value={(good - bad) / (good + neutral + bad)}\n          />\n        </tr>\n        <tr>\n          <Statistic\n            text=\"positive\"\n            value={(good / (good + neutral + bad)) * 100}\n          />\n        </tr>\n      </tbody>\n    </table>\n  );\n};\n\nconst App = () => {\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  return (\n    <div>\n      <h1>give feedback</h1>\n      <Button onClick={() => setGood(good + 1)} text=\"good\" />\n      <Button onClick={() => setNeutral(good + 1)} text=\"neutral\" />\n      <Button onClick={() => setBad(good + 1)} text=\"bad\" />\n      <h1>statistics</h1>\n      <Statistics good={good} neutral={neutral} bad={bad} />\n    </div>\n  );\n};\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"]},"metadata":{},"sourceType":"module"}