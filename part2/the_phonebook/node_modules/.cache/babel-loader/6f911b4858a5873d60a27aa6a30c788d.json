{"ast":null,"code":"var _jsxFileName = \"/Users/hamirizafirdhanardyasta/Documents/Hamiriza's/fullstackopen/part2/the_phonebook/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Filter from \"./components/Filter\";\nimport PersonForm from \"./components/PersonForm\";\nimport Content from \"./components/Content\";\nimport phonebookService from \"./services/phonebook\";\nimport Notifications from \"./components/Notifications\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState(\"\");\n  const [newNumber, setNewNumber] = useState(\"\");\n  const [newFilter, setNewFilter] = useState(\"\");\n  const [filteredPersons, setFilteredPersons] = useState(\"\");\n  const [successMessage, setSuccessMessage] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  useEffect(() => {\n    phonebookService.getAll().then(persons => setPersons(persons));\n  }, []);\n\n  const addPerson = event => {\n    event.preventDefault();\n    const newPerson = {\n      name: newName,\n      number: newNumber\n    };\n\n    if (persons.some(person => person.name.toUpperCase() === newName.toUpperCase())) {\n      const personToUpdate = persons.find(p => p.name === newName);\n      const confirmed = window.confirm(`${newName} is already added to phonebook, replace the old number with new one`);\n      if (!confirmed) return;\n      const changedPerson = { ...personToUpdate,\n        number: newNumber\n      };\n      phonebookService.update(personToUpdate.id, changedPerson).then(returnedPerson => {\n        setSuccessMessage(`Changed ${returnedPerson.name}'s number`);\n        setTimeout(() => setSuccessMessage(\"\"), 5000);\n        setPersons(persons.map(person => person.name !== newName ? person : returnedPerson));\n        setNewNumber(\"\");\n        setNewName(\"\");\n      }).catch(error => {\n        setErrorMessage(`Information of ${changedPerson.name} has already been removed from server`);\n        setTimeout(() => setErrorMessage(\"\"), 5000);\n      });\n    } else {\n      phonebookService.create(newPerson).then(returnedPerson => {\n        setSuccessMessage(`Added ${returnedPerson.name}`);\n        setTimeout(() => setSuccessMessage(\"\"), 5000);\n        setPersons(persons.concat(returnedPerson));\n        setNewNumber(\"\");\n        setNewName(\"\");\n      });\n    }\n  };\n\n  const handleFilter = event => {\n    setNewFilter(event.target.value);\n  };\n\n  useEffect(() => {\n    const regex = new RegExp(newFilter, \"i\");\n    const results = persons.filter(person => person.name.match(regex));\n    setFilteredPersons(results);\n  }, [newFilter, persons]);\n\n  const removePerson = id => {\n    const personToRemove = persons.find(p => p.id === id);\n    const confirmed = window.confirm(`Delete ${personToRemove.name}`);\n    if (!confirmed) return;\n    setPersons(persons.filter(p => p.id !== id));\n    phonebookService.remove(id).then(() => console.log(`Removed ${personToRemove.name} succesfully`));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Phonebook\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Notifications, {\n      successMessage: successMessage,\n      errorMessage: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Filter, {\n      value: newFilter,\n      onChange: handleFilter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"add a new\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PersonForm, {\n      onSubmit: addPerson,\n      newName: newName,\n      handleName: event => setNewName(event.target.value),\n      newNumber: newNumber,\n      handleNumber: event => setNewNumber(event.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Numbers\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Content, {\n      persons: persons,\n      filteredPersons: filteredPersons,\n      removePerson: removePerson\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"KY6azUzuH1SVlpPu5m+A0ccBLJo=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/hamirizafirdhanardyasta/Documents/Hamiriza's/fullstackopen/part2/the_phonebook/src/App.js"],"names":["React","useState","useEffect","Filter","PersonForm","Content","phonebookService","Notifications","App","persons","setPersons","newName","setNewName","newNumber","setNewNumber","newFilter","setNewFilter","filteredPersons","setFilteredPersons","successMessage","setSuccessMessage","errorMessage","setErrorMessage","getAll","then","addPerson","event","preventDefault","newPerson","name","number","some","person","toUpperCase","personToUpdate","find","p","confirmed","window","confirm","changedPerson","update","id","returnedPerson","setTimeout","map","catch","error","create","concat","handleFilter","target","value","regex","RegExp","results","filter","match","removePerson","personToRemove","remove","console","log"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Filter from \"./components/Filter\";\nimport PersonForm from \"./components/PersonForm\";\nimport Content from \"./components/Content\";\nimport phonebookService from \"./services/phonebook\";\nimport Notifications from \"./components/Notifications\";\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState(\"\");\n  const [newNumber, setNewNumber] = useState(\"\");\n  const [newFilter, setNewFilter] = useState(\"\");\n  const [filteredPersons, setFilteredPersons] = useState(\"\");\n  const [successMessage, setSuccessMessage] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(\"\");\n\n  useEffect(() => {\n    phonebookService.getAll().then((persons) => setPersons(persons));\n  }, []);\n\n  const addPerson = (event) => {\n    event.preventDefault();\n    const newPerson = {\n      name: newName,\n      number: newNumber,\n    };\n    if (\n      persons.some(\n        (person) => person.name.toUpperCase() === newName.toUpperCase()\n      )\n    ) {\n      const personToUpdate = persons.find((p) => p.name === newName);\n      const confirmed = window.confirm(\n        `${newName} is already added to phonebook, replace the old number with new one`\n      );\n      if (!confirmed) return;\n\n      const changedPerson = { ...personToUpdate, number: newNumber };\n      phonebookService\n        .update(personToUpdate.id, changedPerson)\n        .then((returnedPerson) => {\n          setSuccessMessage(`Changed ${returnedPerson.name}'s number`);\n          setTimeout(() => setSuccessMessage(\"\"), 5000);\n          setPersons(\n            persons.map((person) =>\n              person.name !== newName ? person : returnedPerson\n            )\n          );\n          setNewNumber(\"\");\n          setNewName(\"\");\n        })\n        .catch((error) => {\n          setErrorMessage(\n            `Information of ${changedPerson.name} has already been removed from server`\n          );\n          setTimeout(() => setErrorMessage(\"\"), 5000);\n        });\n    } else {\n      phonebookService.create(newPerson).then((returnedPerson) => {\n        setSuccessMessage(`Added ${returnedPerson.name}`);\n        setTimeout(() => setSuccessMessage(\"\"), 5000);\n        setPersons(persons.concat(returnedPerson));\n        setNewNumber(\"\");\n        setNewName(\"\");\n      });\n    }\n  };\n\n  const handleFilter = (event) => {\n    setNewFilter(event.target.value);\n  };\n\n  useEffect(() => {\n    const regex = new RegExp(newFilter, \"i\");\n    const results = persons.filter((person) => person.name.match(regex));\n    setFilteredPersons(results);\n  }, [newFilter, persons]);\n\n  const removePerson = (id) => {\n    const personToRemove = persons.find((p) => p.id === id);\n    const confirmed = window.confirm(`Delete ${personToRemove.name}`);\n    if (!confirmed) return;\n\n    setPersons(persons.filter((p) => p.id !== id));\n\n    phonebookService\n      .remove(id)\n      .then(() => console.log(`Removed ${personToRemove.name} succesfully`));\n  };\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notifications\n        successMessage={successMessage}\n        errorMessage={errorMessage}\n      />\n      <Filter value={newFilter} onChange={handleFilter} />\n      <h2>add a new</h2>\n      <PersonForm\n        onSubmit={addPerson}\n        newName={newName}\n        handleName={(event) => setNewName(event.target.value)}\n        newNumber={newNumber}\n        handleNumber={(event) => setNewNumber(event.target.value)}\n      />\n      <h2>Numbers</h2>\n      <Content\n        persons={persons}\n        filteredPersons={filteredPersons}\n        removePerson={removePerson}\n      />\n    </div>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}