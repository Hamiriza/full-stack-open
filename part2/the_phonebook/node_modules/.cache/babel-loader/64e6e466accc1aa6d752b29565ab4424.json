{"ast":null,"code":"var _jsxFileName = \"/Users/hamirizafirdhanardyasta/Documents/Hamiriza's/fullstackopen/part2/the_phonebook/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Number from \"./components/Number\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [persons, setPersons] = useState([{\n    name: \"Arto Hellas\",\n    number: \"040-123456\"\n  }, {\n    name: \"Ada Lovelace\",\n    number: \"39-44-5323523\"\n  }, {\n    name: \"Dan Abramov\",\n    number: \"12-43-234345\"\n  }, {\n    name: \"Mary Poppendieck\",\n    number: \"39-23-6423122\"\n  }]);\n  const [newName, setNewName] = useState(\"\");\n  const [newNumber, setNewNumber] = useState(\"\");\n  const [newFilter, setNewFilter] = useState(\"\");\n  const [filteredPersons, setFilteredPersons] = useState(\"\");\n\n  const addPerson = event => {\n    event.preventDefault();\n    const newPerson = {\n      name: newName,\n      number: newNumber\n    };\n\n    if (persons.some(person => person.name.toUpperCase() === newName.toUpperCase())) {\n      alert(`${newName} is already added to phonebook`);\n    } else {\n      setPersons([...persons, newPerson]);\n      setNewName(\"\");\n      setNewNumber(\"\");\n    }\n  };\n\n  const handleFilter = event => {\n    setNewFilter(event.target.value);\n    let regex = new RegExp(newFilter, \"i\");\n    const filteredPersons = persons.filter(person => person.name.match(regex));\n    setFilteredPersons(filteredPersons);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Phonebook\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"filter shown with \", /*#__PURE__*/_jsxDEV(\"input\", {\n        value: newFilter,\n        onChange: handleFilter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 27\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"add a new\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: addPerson,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          value: newName,\n          onChange: event => setNewName(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"number:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          value: newNumber,\n          onChange: event => setNewNumber(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Numbers\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), filteredPersons.length === 0 ? persons.map((person, index) => /*#__PURE__*/_jsxDEV(Number, {\n      name: person.name,\n      number: person.number\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this)) : filteredPersons.map((person, index) => /*#__PURE__*/_jsxDEV(Number, {\n      name: person.name,\n      number: person.number\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"vSJAVIIJdHEPFe7gK5wzHZohZzM=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/hamirizafirdhanardyasta/Documents/Hamiriza's/fullstackopen/part2/the_phonebook/src/App.js"],"names":["React","useState","Number","App","persons","setPersons","name","number","newName","setNewName","newNumber","setNewNumber","newFilter","setNewFilter","filteredPersons","setFilteredPersons","addPerson","event","preventDefault","newPerson","some","person","toUpperCase","alert","handleFilter","target","value","regex","RegExp","filter","match","length","map","index"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport Number from \"./components/Number\";\n\nconst App = () => {\n  const [persons, setPersons] = useState([\n    { name: \"Arto Hellas\", number: \"040-123456\" },\n    { name: \"Ada Lovelace\", number: \"39-44-5323523\" },\n    { name: \"Dan Abramov\", number: \"12-43-234345\" },\n    { name: \"Mary Poppendieck\", number: \"39-23-6423122\" },\n  ]);\n  const [newName, setNewName] = useState(\"\");\n  const [newNumber, setNewNumber] = useState(\"\");\n  const [newFilter, setNewFilter] = useState(\"\");\n  const [filteredPersons, setFilteredPersons] = useState(\"\");\n\n  const addPerson = (event) => {\n    event.preventDefault();\n    const newPerson = {\n      name: newName,\n      number: newNumber,\n    };\n    if (\n      persons.some(\n        (person) => person.name.toUpperCase() === newName.toUpperCase()\n      )\n    ) {\n      alert(`${newName} is already added to phonebook`);\n    } else {\n      setPersons([...persons, newPerson]);\n      setNewName(\"\");\n      setNewNumber(\"\");\n    }\n  };\n\n  const handleFilter = (event) => {\n    setNewFilter(event.target.value);\n    let regex = new RegExp(newFilter, \"i\");\n    const filteredPersons = persons.filter((person) =>\n      person.name.match(regex)\n    );\n    setFilteredPersons(filteredPersons);\n  };\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <div>\n        filter shown with <input value={newFilter} onChange={handleFilter} />\n      </div>\n      <h2>add a new</h2>\n      <form onSubmit={addPerson}>\n        <div>\n          name:\n          <input\n            value={newName}\n            onChange={(event) => setNewName(event.target.value)}\n          />\n        </div>\n        <div>\n          number:\n          <input\n            value={newNumber}\n            onChange={(event) => setNewNumber(event.target.value)}\n          />\n        </div>\n        <div>\n          <button type=\"submit\">add</button>\n        </div>\n      </form>\n      <h2>Numbers</h2>\n      {filteredPersons.length === 0\n        ? persons.map((person, index) => (\n            <Number key={index} name={person.name} number={person.number} />\n          ))\n        : filteredPersons.map((person, index) => (\n            <Number key={index} name={person.name} number={person.number} />\n          ))}\n    </div>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}