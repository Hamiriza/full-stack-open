{"ast":null,"code":"var _jsxFileName = \"/Users/hamirizafirdhanardyasta/Documents/Hamiriza's/fullstackopen/part2/lessons/src/index.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App.js\";\nimport \"./index.css\"; // const express = require(\"express\");\n// const app = express();\n// app.use(express.json());\n// const requestLogger = (request, response, next) => {\n//   console.log(\"Method:\", request.method);\n//   console.log(\"Path: \", request.path);\n//   console.log(\"Body: \", request.body);\n//   console.log(\"--\");\n//   next();\n// };\n// app.use(requestLogger);\n// let notes = [\n//   {\n//     id: 1,\n//     content: \"HTML is easy\",\n//     date: \"2019-05-30T17:30:31.098Z\",\n//     important: true,\n//   },\n//   {\n//     id: 2,\n//     content: \"Browser can execute only Javascript\",\n//     date: \"2019-05-30T18:39:34.091Z\",\n//     important: false,\n//   },\n//   {\n//     id: 3,\n//     content: \"GET and POST are the most important methods of HTTP protocol\",\n//     date: \"2019-05-30T19:20:14.298Z\",\n//     important: true,\n//   },\n// ];\n// app.get(\"/\", (request, response) => {\n//   response.send(\"<h1>Hello World!</h1>\");\n// });\n// app.get(\"/api/notes\", (request, response) => {\n//   response.json(notes);\n// });\n// app.get(\"/api/notes/:id\", (request, response) => {\n//   const id = Number(request.params.id);\n//   const note = notes.find((note) => note.id === id);\n//   if (note) {\n//     response.json(note);\n//   } else {\n//     response.status(404).end();\n//   }\n// });\n// app.delete(\"/api/notes/:id\", (request, response) => {\n//   const id = Number(request.params.id);\n//   notes = notes.filter((note) => note.id !== id);\n//   response.status(204).end();\n// });\n// app.post(\"/api/notes\", (request, response) => {\n//   const body = request.body;\n//   if (!body.content) {\n//     return response.status(400).json({\n//       error: \"content missing\",\n//     });\n//   }\n//   const note = {\n//     content: body.content,\n//     important: body.important || false,\n//     date: new Date(),\n//     id: generateId(),\n//   };\n//   notes = notes.concat(note);\n//   response.json(note);\n// });\n// const generateId = () => {\n//   const maxId = notes.length > 0 ? Math.max(...notes.map((n) => n.id)) : 0;\n//   return maxId + 1;\n// };\n// const unknownEndpoint = (request, response) => {\n//   response.status(404).send({ error: \"unknown endpoint\" });\n// };\n// app.use(unknownEndpoint);\n// const PORT = 3001;\n// app.listen(PORT);\n// console.log(`Server running on port ${PORT}`);\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nReactDOM.render( /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 103,\n  columnNumber: 17\n}, this), document.getElementById(\"root\"));","map":{"version":3,"sources":["/Users/hamirizafirdhanardyasta/Documents/Hamiriza's/fullstackopen/part2/lessons/src/index.js"],"names":["React","ReactDOM","App","render","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,GAAP,MAAgB,UAAhB;AACA,OAAO,aAAP,C,CACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;;;AAEAD,QAAQ,CAACE,MAAT,eAAgB,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA,QAAhB,EAAyBC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAzB","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App.js\";\nimport \"./index.css\";\n// const express = require(\"express\");\n// const app = express();\n\n// app.use(express.json());\n\n// const requestLogger = (request, response, next) => {\n//   console.log(\"Method:\", request.method);\n//   console.log(\"Path: \", request.path);\n//   console.log(\"Body: \", request.body);\n//   console.log(\"--\");\n//   next();\n// };\n\n// app.use(requestLogger);\n\n// let notes = [\n//   {\n//     id: 1,\n//     content: \"HTML is easy\",\n//     date: \"2019-05-30T17:30:31.098Z\",\n//     important: true,\n//   },\n//   {\n//     id: 2,\n//     content: \"Browser can execute only Javascript\",\n//     date: \"2019-05-30T18:39:34.091Z\",\n//     important: false,\n//   },\n//   {\n//     id: 3,\n//     content: \"GET and POST are the most important methods of HTTP protocol\",\n//     date: \"2019-05-30T19:20:14.298Z\",\n//     important: true,\n//   },\n// ];\n\n// app.get(\"/\", (request, response) => {\n//   response.send(\"<h1>Hello World!</h1>\");\n// });\n\n// app.get(\"/api/notes\", (request, response) => {\n//   response.json(notes);\n// });\n\n// app.get(\"/api/notes/:id\", (request, response) => {\n//   const id = Number(request.params.id);\n//   const note = notes.find((note) => note.id === id);\n\n//   if (note) {\n//     response.json(note);\n//   } else {\n//     response.status(404).end();\n//   }\n// });\n\n// app.delete(\"/api/notes/:id\", (request, response) => {\n//   const id = Number(request.params.id);\n//   notes = notes.filter((note) => note.id !== id);\n\n//   response.status(204).end();\n// });\n\n// app.post(\"/api/notes\", (request, response) => {\n//   const body = request.body;\n\n//   if (!body.content) {\n//     return response.status(400).json({\n//       error: \"content missing\",\n//     });\n//   }\n\n//   const note = {\n//     content: body.content,\n//     important: body.important || false,\n//     date: new Date(),\n//     id: generateId(),\n//   };\n\n//   notes = notes.concat(note);\n\n//   response.json(note);\n// });\n\n// const generateId = () => {\n//   const maxId = notes.length > 0 ? Math.max(...notes.map((n) => n.id)) : 0;\n//   return maxId + 1;\n// };\n\n// const unknownEndpoint = (request, response) => {\n//   response.status(404).send({ error: \"unknown endpoint\" });\n// };\n\n// app.use(unknownEndpoint);\n\n// const PORT = 3001;\n// app.listen(PORT);\n// console.log(`Server running on port ${PORT}`);\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"]},"metadata":{},"sourceType":"module"}