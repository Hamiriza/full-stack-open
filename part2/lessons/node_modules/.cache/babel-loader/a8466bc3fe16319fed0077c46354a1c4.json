{"ast":null,"code":"var _jsxFileName = \"/Users/hamirizafirdhanardyasta/Documents/Hamiriza's/fullstackopen/part2/lessons/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Note from \"./components/Note\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [notes, setNotes] = useState([]);\n  const [newNote, setNewNote] = useState(\"a new note...\");\n  const [showAll, setShowAll] = useState(true);\n  useEffect(() => {\n    // console.log(\"effect\");\n    axios.get(\"http://0.0.0.0:3001/notes\").then(response => {\n      console.log(\"promise fulfilled\");\n      setNotes(response.data);\n    });\n  }, []); // console.log(\"render\", notes.length, \"notes\");\n\n  const addNote = event => {\n    event.preventDefault();\n    const noteObject = {\n      content: newNote,\n      date: new Date().toISOString(),\n      important: Math.random() < 0.5,\n      id: notes.length + 1\n    };\n    axios.post(\"http://localhost:3001/notes\", noteObject).then(response => {\n      console.log(response);\n    }); // setNotes(notes.concat(noteObject));\n\n    setNewNote(\"\");\n  };\n\n  const handleNoteChange = event => {\n    // console.log(event.target.value);\n    setNewNote(event.target.value);\n  };\n\n  const notesToShow = showAll ? notes : notes.filter(note => note.important === true);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Notes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setShowAll(!showAll),\n        children: [\"show \", showAll ? \"important\" : \"all\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: notesToShow.map(note => /*#__PURE__*/_jsxDEV(Note, {\n        note: note\n      }, note.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: addNote,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: newNote,\n        onChange: handleNoteChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"PjmG5knfIWMMLBTmikcYAQLyD0s=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/hamirizafirdhanardyasta/Documents/Hamiriza's/fullstackopen/part2/lessons/src/App.js"],"names":["React","useState","useEffect","Note","axios","App","notes","setNotes","newNote","setNewNote","showAll","setShowAll","get","then","response","console","log","data","addNote","event","preventDefault","noteObject","content","date","Date","toISOString","important","Math","random","id","length","post","handleNoteChange","target","value","notesToShow","filter","note","map"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACO,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,eAAD,CAAtC;AACA,QAAM,CAACS,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC,IAAD,CAAtC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd;AACAE,IAAAA,KAAK,CAACQ,GAAN,CAAU,2BAAV,EAAuCC,IAAvC,CAA6CC,QAAD,IAAc;AACxDC,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACAT,MAAAA,QAAQ,CAACO,QAAQ,CAACG,IAAV,CAAR;AACD,KAHD;AAID,GANQ,EAMN,EANM,CAAT,CALgB,CAYhB;;AAEA,QAAMC,OAAO,GAAIC,KAAD,IAAW;AACzBA,IAAAA,KAAK,CAACC,cAAN;AACA,UAAMC,UAAU,GAAG;AACjBC,MAAAA,OAAO,EAAEd,OADQ;AAEjBe,MAAAA,IAAI,EAAE,IAAIC,IAAJ,GAAWC,WAAX,EAFW;AAGjBC,MAAAA,SAAS,EAAEC,IAAI,CAACC,MAAL,KAAgB,GAHV;AAIjBC,MAAAA,EAAE,EAAEvB,KAAK,CAACwB,MAAN,GAAe;AAJF,KAAnB;AAOA1B,IAAAA,KAAK,CAAC2B,IAAN,CAAW,6BAAX,EAA0CV,UAA1C,EAAsDR,IAAtD,CAA4DC,QAAD,IAAc;AACvEC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACD,KAFD,EATyB,CAazB;;AACAL,IAAAA,UAAU,CAAC,EAAD,CAAV;AACD,GAfD;;AAiBA,QAAMuB,gBAAgB,GAAIb,KAAD,IAAW;AAClC;AACAV,IAAAA,UAAU,CAACU,KAAK,CAACc,MAAN,CAAaC,KAAd,CAAV;AACD,GAHD;;AAKA,QAAMC,WAAW,GAAGzB,OAAO,GACvBJ,KADuB,GAEvBA,KAAK,CAAC8B,MAAN,CAAcC,IAAD,IAAUA,IAAI,CAACX,SAAL,KAAmB,IAA1C,CAFJ;AAIA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,6BACE;AAAQ,QAAA,OAAO,EAAE,MAAMf,UAAU,CAAC,CAACD,OAAF,CAAjC;AAAA,4BACQA,OAAO,GAAG,WAAH,GAAiB,KADhC;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF,eAOE;AAAA,gBACGyB,WAAW,CAACG,GAAZ,CAAiBD,IAAD,iBACf,QAAC,IAAD;AAAoB,QAAA,IAAI,EAAEA;AAA1B,SAAWA,IAAI,CAACR,EAAhB;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YAPF,eAYE;AAAM,MAAA,QAAQ,EAAEX,OAAhB;AAAA,8BACE;AAAO,QAAA,KAAK,EAAEV,OAAd;AAAuB,QAAA,QAAQ,EAAEwB;AAAjC;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAZF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD,CA3DD;;GAAM3B,G;;KAAAA,G;AA6DN,eAAeA,GAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Note from \"./components/Note\";\nimport axios from \"axios\";\n\nconst App = () => {\n  const [notes, setNotes] = useState([]);\n  const [newNote, setNewNote] = useState(\"a new note...\");\n  const [showAll, setShowAll] = useState(true);\n\n  useEffect(() => {\n    // console.log(\"effect\");\n    axios.get(\"http://0.0.0.0:3001/notes\").then((response) => {\n      console.log(\"promise fulfilled\");\n      setNotes(response.data);\n    });\n  }, []);\n  // console.log(\"render\", notes.length, \"notes\");\n\n  const addNote = (event) => {\n    event.preventDefault();\n    const noteObject = {\n      content: newNote,\n      date: new Date().toISOString(),\n      important: Math.random() < 0.5,\n      id: notes.length + 1,\n    };\n\n    axios.post(\"http://localhost:3001/notes\", noteObject).then((response) => {\n      console.log(response);\n    });\n\n    // setNotes(notes.concat(noteObject));\n    setNewNote(\"\");\n  };\n\n  const handleNoteChange = (event) => {\n    // console.log(event.target.value);\n    setNewNote(event.target.value);\n  };\n\n  const notesToShow = showAll\n    ? notes\n    : notes.filter((note) => note.important === true);\n\n  return (\n    <div>\n      <h1>Notes</h1>\n      <div>\n        <button onClick={() => setShowAll(!showAll)}>\n          show {showAll ? \"important\" : \"all\"}\n        </button>\n      </div>\n      <ul>\n        {notesToShow.map((note) => (\n          <Note key={note.id} note={note} />\n        ))}\n      </ul>\n      <form onSubmit={addNote}>\n        <input value={newNote} onChange={handleNoteChange} />\n        <button type=\"submit\">save</button>\n      </form>\n    </div>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}